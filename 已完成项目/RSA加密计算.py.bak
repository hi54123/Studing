# coding:utf-8
import math


# 定义质数验证函数
def zhishu(num):
	for i in range(2, int(math.sqrt(num)) + 1):
		if num % i == 0:
			print(f"{num}不是质数")
			return False
	return True


options = input('请输入步骤（获取公钥(1) / 加密密码(2) / 解密(3）：')
if options == '获取公钥' or options == '1':
	while True:
		# 获取公钥
		P = int(input('请输入质数P，退出请输入0'))
		if P == 0:
			chooses = input('确定要退出吗(确定为y，否为任何)')
			if chooses == 'y':
				quit()
			else:
				continue
		Q = int(input('请输入质数Q，退出请输入0'))
		if Q == 0:
			chooses = input('确定要退出吗(确定为y，否为任何)')
			if chooses == 'y':
				quit()
			else:
				continue
		if zhishu(P):
			if zhishu(Q):
				N = P * Q
				R = (P - 1) * (Q - 1)
				print('R=' + str(R))
				e = int(input('请输入一个与R互质的数:e'))
				print('公钥:' + str(N) + ',' + str(e))
				# 获取私钥
				for d in range(1, R):
					if d * e % R == 1:
						break
				print(f'私钥是:{d}')
				break
			else:
				continue
		else:
			continue


# 加密密码
elif options == '加密密码' or options == '2':
	N = int(input('请输入第一个公钥'))
	e = int(input('请输入第二个公钥'))
	x = int(input('请输入要加密的数'))
	C = math.pow(x, e) % N
	print('C是' + str(C))


# 解密
elif options == '解密' or options == '3':
	# 接受到乙的C后：
	N = int(input('请输入第一个公钥'))
	d = int(input('请输入私钥'))
	C = int(input('请输入C'))
	x = C ** d % N
	print(f'密码是：{x}')
